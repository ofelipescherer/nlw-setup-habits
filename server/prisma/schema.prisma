generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// prisma suporta vários banco de dados (Ai cada banco usa um nome, por isso o prisma generaliza com "model")
// @id significa que é chave primária
// @default(uuid()) Toda vez que gerar um id, gera um uuid (Universal unique Id)
// @@map("habits") Da um alias para a tabela, então a tabela se chamará "habits"
model Habit {
  id         String          @id @default(uuid())
  title      String
  created_at DateTime
  dayHabits  DayHabit[]
  weekDays   HabitWeekDays[]

  @@map("habits")
}

// @@unique diz que o campo date é único, ou seja, não pode ter mais de um date nessa tabela
// O DayHabits não está em snake case porque não é uma tabela no campo, é uma anotação em javascript pro prisma poder criar as tabelas
model HabitWeekDays {
  id       String @id @default(uuid())
  habit_id String
  week_day Int
  habit    Habit  @relation(fields: [habit_id], references: [id])

  @@unique([habit_id, week_day])
  @@map("habit_week_days")
}

model Day {
  id        String     @id @default(uuid())
  date      DateTime
  dayHabits DayHabit[]

  @@index([date])
  @@map("days")
}

model DayHabit {
  id       String @id @default(uuid())
  day_id   String
  habit_id String
  day      Day    @relation(fields: [day_id], references: [id])
  habit    Habit  @relation(fields: [habit_id], references: [id])

  @@unique([day_id, habit_id])
  @@map("day_habits")
}
